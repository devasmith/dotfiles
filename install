#!/bin/bash 
set -e

export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$HOME/bin

# lnk "file here" "file in home"
lnk(){
	FROM=$2
	TO=$1
	echo "Linking $HOME/$FROM to $PWD/$TO"
	ln -snf "$PWD/$TO" "$HOME/$FROM"
}

content(){
	FILE=$1
	CONTENT=$2
	echo "Ensure content in: $FILE"
	grep -q "$CONTENT" "$FILE" || ( echo "$CONTENT" >> "$FILE" && echo "content updated in $FILE" )
}

i(){
	if ! [ -x "$(command -v pacman)" ]; then
	  echo "pacman not found. skipping install of " "$@"
	  return
	fi
	sudo pacman --noconfirm -S --needed "$@"
}

echo "Upgrade system and install git"
sudo dnf upgrade -y
sudo dnf install git -y

echo "Git pull"
git pull --autostash

[[ -d ~/bin ]] || mkdir -p ~/bin
[[ -d ~/Screenshots ]] || mkdir -p ~/Screenshots

DIST=$(awk -F= '/^NAME/{print $2}' /etc/os-release)
if [[ "$DIST" == *"Fedora"* ]]; then
	./install-fedora
fi

echo "Install stuff with cargo"
cargo install cargo-update # update all with cargo install-update -a
cargo install git-delta
cargo install fnm
cargo install --git https://github.com/Icelk/clipcat.git

echo "setting up ssh-agent systemd user service"
mkdir -p "$HOME/.config/systemd/user"
content "$HOME/.config/systemd/user/ssh-agent.service" "$(cat <<-END
[Unit]
Description=SSH key agent

[Service]
Type=simple
Environment=SSH_AUTH_SOCK=%t/ssh-agent.socket
ExecStart=/usr/bin/ssh-agent -D -a \$SSH_AUTH_SOCK

[Install]
WantedBy=default.target
END
)"

content "$HOME/.config/systemd/user/clipcatd.service" "$(cat <<-END
[Unit]
Description=Starts the clipboard daemon

[Service]
Type=simple
ExecStart=sh -c "PATH=~/.cargo/bin:\$PATH clipcatd --no-daemon"
Restart=on-failure

[Install]
WantedBy=default.target
END
)"

systemctl enable --user --now ssh-agent
systemctl enable --user --now clipcatd

echo "Setting up bashrc"
git config --global credential.helper 'cache --timeout 3600'
content ~/.bashrc ". $PWD/bashrc"

if [ ! -f ~/bin/kube-ps1.sh ]; then
	echo "Install kube-ps1"
	curl -s -o ~/bin/kube-ps1.sh https://raw.githubusercontent.com/jonmosco/kube-ps1/master/kube-ps1.sh
fi

if [ ! -d ~/.bash-git-prompt ]; then
	echo "Install bash-git-prompt"
    git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1
fi

mkdir -p ~/.vim/bundle

if [ ! -d ~/.fzf ]; then
	git clone https://github.com/junegunn/fzf.git ~/.fzf
	~/.fzf/install --all
fi

lnk "update" "bin/update"
lnk "jshintrc" ".jshintrc"
lnk "lockFuzzy" "bin/lockFuzzy"
lnk "dir_colors" ".dir_colors"
lnk "nvim" ".config/nvim"
lnk "alacritty" ".config/alacritty"
lnk "i3exit" "bin/i3exit"
lnk "clipcat" ".config/clipcat"
lnk "gitignore" ".gitignore"
lnk "gitconfig" ".gitconfig"
lnk "git-personal.conf" ".git-personal.conf"
if [[ -f ~/.config/i3/config && ! -L ~/.config/i3/config ]]; then
	mv ~/.config/i3/config ~/.config/i3/config.old
else
	lnk "i3config" .config/i3/config
fi
lnk "i3status" .config/i3/status

echo "Installing plugins into vim"
nvim +PlugInstall +qall

echo "Running common script"
./common

echo "Done"
